private static String fn_A(char[] a,int b,int c,char[] d){
  if (d.length < c) {
    int e=c * 2;
    if (e < 0) {
      e=Integer.MAX_VALUE;
    }
    d=new char[e];
  }
  char[] f=d;
  int g=0;
  int h=b + c;
  while (b < h) {
    char i=a[b++];
    if (i == '\\') {
      i=a[b++];
      if (i == 'u') {
        int j=0;
        for (int k=0; k < 4; ++k) {
          i=a[b++];
switch (i) {
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
case '8':
case '9':
            j=(j << 4) + i - '0';
          break;
case ':':
case ';':
case '<':
case '=':
case '>':
case '?':
case '@':
case 'G':
case 'H':
case 'I':
case 'J':
case 'K':
case 'L':
case 'M':
case 'N':
case 'O':
case 'P':
case 'Q':
case 'R':
case 'S':
case 'T':
case 'U':
case 'V':
case 'W':
case 'X':
case 'Y':
case 'Z':
case '[':
case '\\':
case ']':
case '^':
case '_':
case '`':
default :
        throw new IllegalArgumentException("Malformed \\uxxxx encoding.");
case 'A':
case 'B':
case 'C':
case 'D':
case 'E':
case 'F':
      j=(j << 4) + 10 + i - 'A';
    break;
case 'a':
case 'b':
case 'c':
case 'd':
case 'e':
case 'f':
  j=(j << 4) + 10 + i - 'a';
}
}
f[g++]=(char)j;
}
 else {
if (i == 't') {
i='\t';
}
 else if (i == 'r') {
i='\r';
}
 else if (i == 'n') {
i='\n';
}
 else if (i == 'f') {
i='\f';
}
f[g++]=i;
}
}
 else {
f[g++]=i;
}
}
return new String(f,0,g);
}

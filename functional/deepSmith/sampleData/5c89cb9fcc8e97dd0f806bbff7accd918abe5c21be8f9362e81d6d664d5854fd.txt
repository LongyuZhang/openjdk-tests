public static long fn_A(char[] a,int b,int c){
  if (c > 0) {
    if (a[b] == '0') {
      return 0;
    }
    long d=0;
    boolean e=false;
    int f=b;
    long g;
    if (a[f] == '-') {
      e=true;
      g=Long.MIN_VALUE;
      f++;
    }
 else {
      if (c == 1) {
        int h=a[f] - '0';
        if (h < 0 || h > 9) {
          throw new NumberFormatException(new String(a,b,c));
        }
 else {
          return h;
        }
      }
      g=-Long.MAX_VALUE;
    }
    int i=b + c;
    if (f < i) {
      int h=a[f++] - '0';
      if (h < 0 || h > 9) {
        throw new NumberFormatException(new String(a,b,c));
      }
 else {
        d=-h;
      }
    }
    long j=g / 10;
    while (f < i) {
      int h=a[f++] - '0';
      if (h < 0 || h > 9) {
        throw new NumberFormatException(new String(a,b,c));
      }
      if (d < j) {
        throw new NumberFormatException(new String(a,b,c));
      }
      d*=10;
      if (d < g + h) {
        throw new NumberFormatException(new String(a,b,c));
      }
      d-=h;
    }
    if (e) {
      if (f > b + 1) {
        return d;
      }
 else {
        throw new NumberFormatException(new String(a,b,c));
      }
    }
 else {
      return -d;
    }
  }
 else {
    throw new NumberFormatException(new String(a,b,c));
  }
}

public static void fn_A(float[][] a){
  if (a.length < 1)   return;
  if (a.length == 1)   a[0][0]=1;
  float[][] b=new float[a.length][];
  b[a.length - 1]=new float[a.length];
  b[a.length - 2]=new float[a.length];
  int c=a.length - 2, d=a.length - 1;
  b[c][d]=a[d][c];
  for (; c < a.length; c++) {
    for (d=a[c].length; d-- > 0; )     b[c][d]=a[c][d];
  }
  for (c=a.length - 2; c-- > 0; ) {
    d=a[c].length + 2;
    b[c]=new float[d];
    b[c][--d]=a[d][c];
    b[c][--d]=a[d][c];
    for (; d-- > 0; )     b[c][d]=a[c][d];
  }
  c=0;
  d=0;
  int e=c + 1, f=d + 1;
  float g=b[c][d];
  a[c][d]=((g > b[e][d] ? 1 : 0) + (g > b[c][f] ? 1 : 0) + (g > b[e][f] ? 1 : 0)) / (float)3;
  c=a.length - 1;
  d=c;
  int h=c - 1, i=d - 1;
  g=b[c][d];
  a[c][d]=((g > b[c][i] ? 1 : 0) + (g > b[h][d] ? 1 : 0) + (g > b[h][i] ? 1 : 0)) / (float)3;
  c=a.length - 1;
  d=0;
  h=c - 1;
  f=d + 1;
  g=b[c][d];
  a[c][d]=((g > b[h][d] ? 1 : 0) + (g > b[h][f] ? 1 : 0) + (g > b[c][f] ? 1 : 0)) / (float)3;
  c=a.length - 1;
  h=c - 1;
  for (d=c; d-- > 1; ) {
    i=d - 1;
    f=d + 1;
    g=b[c][d];
    a[c][d]=((g > b[c][i] ? 1 : 0) + (g > b[c][f] ? 1 : 0) + (g > b[h][i] ? 1 : 0)+ (g > b[h][d] ? 1 : 0)+ (g > b[h][f] ? 1 : 0)) / (float)5;
  }
  d=0;
  f=1;
  for (c=a.length - 1; c-- > 1; ) {
    h=c - 1;
    e=c + 1;
    g=b[c][d];
    a[c][d]=((g > b[h][d] ? 1 : 0) + (g > b[h][f] ? 1 : 0) + (g > b[c][f] ? 1 : 0)+ (g > b[e][d] ? 1 : 0)+ (g > b[e][f] ? 1 : 0)) / (float)5;
  }
  for (c=a.length - 1; c-- > 1; ) {
    h=c - 1;
    e=c + 1;
    for (d=a[c].length; d-- > 1; ) {
      i=d - 1;
      f=d + 1;
      g=b[c][d];
      a[c][d]=((g > b[h][i] ? 1 : 0) + (g > b[h][d] ? 1 : 0) + (g > b[h][f] ? 1 : 0)+ (g > b[c][i] ? 1 : 0)+ (g > b[c][f] ? 1 : 0)+ (g > b[e][i] ? 1 : 0)+ (g > b[e][d] ? 1 : 0)+ (g > b[e][f] ? 1 : 0)) / (float)8;
    }
  }
}

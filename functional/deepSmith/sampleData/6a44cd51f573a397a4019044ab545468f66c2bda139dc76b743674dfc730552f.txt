public final static void fn_A(final double[][] a,final int b,double c[],double d[]){
  int e, f, g, h;
  double i, j, k, l, m;
  for (h=b; h >= 2; h--) {
    e=h - 1;
    k=i=0.0;
    if (e > 1) {
      for (f=1; f <= e; f++)       i+=Math.abs(a[h][f]);
      if (i == 0.0)       d[h]=a[h][e];
 else {
        for (f=1; f <= e; f++) {
          a[h][f]/=i;
          k+=a[h][f] * a[h][f];
        }
        m=a[h][e];
        if (m >= 0.0)         l=-Math.sqrt(h);
 else         l=Math.sqrt(h);
        d[h]=i * l;
        k-=m * l;
        a[h][e]=m - l;
        m=0.0;
        for (g=1; g <= e; g++) {
          a[g][h]=a[h][g] / k;
          l=0.0;
          for (f=1; f <= g; f++)           l+=a[g][f] * a[h][f];
          for (f=g + 1; f <= e; f++)           l+=a[f][g] * a[h][f];
          d[g]=l / k;
          m+=d[g] * a[h][g];
        }
        j=m / (k + k);
        for (g=1; g <= e; g++) {
          m=a[h][g];
          d[g]=l=d[g] - j * m;
          for (f=1; f <= g; f++)           a[g][f]-=(m * d[f] + l * a[h][f]);
        }
      }
    }
 else     d[h]=a[h][e];
    c[h]=k;
  }
  c[1]=0.0;
  d[1]=0.0;
  for (h=1; h <= b; h++) {
    e=h - 1;
    if (c[h] != 0) {
      for (g=1; g <= e; g++) {
        l=0.0;
        for (f=1; f <= e; f++)         l+=a[h][f] * a[f][g];
        for (f=1; f <= e; f++)         a[f][g]-=l * a[f][h];
      }
    }
    c[h]=a[h][h];
    a[h][h]=1.0;
    for (g=1; g <= e; g++)     a[g][h]=a[h][g]=0.0;
  }
}

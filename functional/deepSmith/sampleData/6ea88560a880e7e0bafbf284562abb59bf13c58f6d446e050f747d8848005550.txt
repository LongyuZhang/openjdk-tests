public static void fn_A(){
  System.out.println();
  System.out.println("Double.POSITIVE_INFINITY = " + Long.toHexString(Double.doubleToRawLongBits(Double.POSITIVE_INFINITY)));
  System.out.println("Double.NEGATIVE_INFINITY = " + Long.toHexString(Double.doubleToRawLongBits(Double.NEGATIVE_INFINITY)));
  System.out.println("Float.POSITIVE_INFINITY  = " + Long.toHexString(Double.doubleToRawLongBits(Float.POSITIVE_INFINITY)));
  System.out.println("Float.NEGATIVE_INFINITY  = " + Long.toHexString(Double.doubleToRawLongBits(Float.NEGATIVE_INFINITY)));
  System.out.println("Double.NaN               = " + Long.toHexString(Double.doubleToRawLongBits(Double.NaN)));
  System.out.println("Float.NaN                = " + Long.toHexString(Double.doubleToRawLongBits(Float.NaN)));
  double a=Double.NaN;
  System.out.println();
  System.out.println("(byte) Double.NaN  =               " + (Long.toHexString((byte)a).equals("0") ? "00" : Long.toHexString((byte)a).substring(6)) + " expected:               00");
  System.out.println("(short) Double.NaN =             " + (Integer.toHexString((short)a).equals("0") ? "0000" : Integer.toHexString((short)a).substring(4)) + " expected:             0000");
  System.out.println("(int) Double.NaN   =         " + (Integer.toHexString((int)a).equals("0") ? "00000000" : Integer.toHexString((int)a)) + " expected:         00000000");
  System.out.println("(long) Double.NaN  = " + (Long.toHexString((long)a).equals("0") ? "0000000000000000" : Long.toHexString((long)a)) + " expected: 0000000000000000");
  float b=Float.NaN;
  System.out.println();
  System.out.println("(byte) Float.NaN  =               " + (Long.toHexString((byte)b).equals("0") ? "00" : Long.toHexString((byte)b).substring(6)) + " expected:               00");
  System.out.println("(short) Float.NaN =             " + (Integer.toHexString((short)b).equals("0") ? "0000" : Integer.toHexString((short)b).substring(4)) + " expected:             0000");
  System.out.println("(int) Float.NaN   =         " + (Integer.toHexString((int)b).equals("0") ? "00000000" : Integer.toHexString((int)b)) + " expected:         00000000");
  System.out.println("(long) Float.NaN  = " + (Long.toHexString((long)b).equals("0") ? "0000000000000000" : Long.toHexString((long)b)) + " expected: 0000000000000000");
  double c=Double.POSITIVE_INFINITY;
  System.out.println();
  System.out.println("(byte) Double.POSITIVE_INFINITY  =               " + (Integer.toHexString((byte)c).equals("0") ? "00" : Integer.toHexString((byte)c).substring(6)) + " expected:               ff");
  System.out.println("(short) Double.POSITIVE_INFINITY =             " + (Integer.toHexString((short)c).equals("0") ? "0000" : Integer.toHexString((short)c).substring(4)) + " expected:             ffff");
  System.out.println("(int) Double.POSITIVE_INFINITY   =         " + Integer.toHexString((int)c) + " expected:         7fffffff");
  System.out.println("(long) Double.POSITIVE_INFINITY  = " + Long.toHexString((long)c) + " expected: 7fffffffffffffff");
  double d=Double.NEGATIVE_INFINITY;
  System.out.println();
  System.out.println("(byte) Double.NEGATIVE_INFINITY  = " + (Long.toHexString((byte)d).equals("0") ? "              00" : Long.toHexString((byte)d)) + " expected:               00");
  System.out.println("(short) Double.NEGATIVE_INFINITY = " + (Integer.toHexString((short)d).equals("0") ? "            0000" : Long.toHexString((short)d)) + " expected:             0000");
  System.out.println("(int) Double.NEGATIVE_INFINITY   =         " + Integer.toHexString((int)d) + " expected:         80000000");
  System.out.println("(long) Double.NEGATIVE_INFINITY  = " + Long.toHexString((long)d) + " expected: 8000000000000000");
  float e=Float.POSITIVE_INFINITY;
  System.out.println();
  System.out.println("(byte) Float.POSITIVE_INFINITY   =               " + (Integer.toHexString((byte)e).equals("0") ? "00" : Integer.toHexString((byte)e).substring(6)) + " expected:               ff");
  System.out.println("(short) Float.POSITIVE_INFINITY  =             " + (Integer.toHexString((short)e).equals("0") ? "0000" : Integer.toHexString((short)e).substring(4)) + " expected:             ffff");
  System.out.println("(int) Float.POSITIVE_INFINITY    =         " + Integer.toHexString((int)e) + " expected:         7fffffff");
  System.out.println("(long) Float.POSITIVE_INFINITY   = " + Long.toHexString((long)e) + " expected: 7fffffffffffffff");
  float f=Float.NEGATIVE_INFINITY;
  System.out.println();
  System.out.println("(byte) Float.NEGATIVE_INFINITY   = " + (Long.toHexString((byte)f).equals("0") ? "              00" : Long.toHexString((byte)f)) + " expected:               00");
  System.out.println("(short) Float.NEGATIVE_INFINITY  = " + (Integer.toHexString((short)f).equals("0") ? "            0000" : Long.toHexString((short)f)) + " expected:             0000");
  System.out.println("(int) Float.NEGATIVE_INFINITY    =         " + Integer.toHexString((int)f) + " expected:         80000000");
  System.out.println("(long) Float.NEGATIVE_INFINITY   = " + Long.toHexString((long)f) + " expected: 8000000000000000");
  System.out.println();
}

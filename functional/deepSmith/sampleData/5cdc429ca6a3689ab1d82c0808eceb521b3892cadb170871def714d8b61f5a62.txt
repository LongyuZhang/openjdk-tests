public static void fn_A(int a,String b){
switch (a) {
case 0:
    System.out.println("=============================================================================");
  System.out.println("Shotgun V2.1: Extreme Ensemble Selection Project");
System.out.println();
System.out.println("coded by Alex Ksikes, ak107@cs.cornell.edu");
System.out.println("=============================================================================");
System.out.println("Usage: ");
System.out.println("  java -jar shotgun?.jar [options] pred_folder train_name");
System.out.println();
System.out.println("Command options: (default -sfr number of models)");
System.out.println("  -s           -> sort selection");
System.out.println("  -g           -> greatest increase");
System.out.println("  -b           -> backward elimination");
System.out.println("  -f           -> forward selection");
System.out.println("  -fr  int     -> forward selection with replacement");
System.out.println("  -sfr int     -> sort selection and procced with fr");
System.out.println();
System.out.println("Performance options: (default -rms)");
System.out.println("  -acc         -> accuracy");
System.out.println("  -rms         -> root mean square error");
System.out.println("  -roc         -> roc area");
System.out.println("  -all [0..1]  -> weighted combination of all performances");
System.out.println("  -bep         -> break even point");
System.out.println("  -pre         -> precision");
System.out.println("  -rec         -> recall");
System.out.println("  -fsc         -> f score");
System.out.println("  -apr         -> average precition");
System.out.println("  -lft         -> lift");
System.out.println("  -cst a b c d -> cost");
System.out.println("  -nrm float   -> norm");
System.out.println("  -mxe         -> mean cross entropy");
System.out.println();
System.out.println("Other options:");
System.out.println("  -d   float              -> weight decay");
System.out.println("  -bsp numbsp numpts seed -> bootstrappping");
System.out.println("  -o   string             -> optional output name");
System.out.println("  -t   float              -> threshold");
System.out.println("  -p   [0..100]           -> percent of data to predict one");
System.out.println("  -wp                     -> write the predictions of the best ensemble");
System.out.println("  -x                      -> output performance of each model only");
System.out.println("  -?                      -> this help message");
System.out.println();
System.out.println("Arguments:");
System.out.println("  pred_folder -> path of the folder containing folders of predictions");
System.out.println("  train_name  -> name of the folder to train shotgun on");
System.out.println("=============================================================================");
break;
case 1:
System.out.println("Error : No target file found in folder " + b);
break;
case 2:
System.out.println("Error : could not find the train folder.");
break;
case 3:
System.out.println("Error : predictions folder do not have the same number of models.");
break;
case 4:
System.out.println("Error : wrong command argument.");
break;
}
}

private static void fn_A(){
  System.out.println("The post process utility performs post processing on a result file from a set of runs.");
  System.out.println("Usage:\n<post process command> <op> <input file> [<output file>] [options]");
  System.out.println("  op may be one of the following.");
  System.out.println("    gs: calculates statistics over all runs for each generation. ");
  System.out.println("        If a glob pattern is provided then the output file names are based on the input file names.");
  System.out.println("    ca: For each run, computes averages over some number of generations (the window size) within the run.");
  System.out.println("        The default number of result values for each run in the output file is 100,");
  System.out.println("        but a different number of result values can be specified after the name of the output file.");
  System.out.println("        If a glob pattern is provided then the output file names are based on the input file names,");
  System.out.println("        the input file pattern should be followed by the result size if desired.");
  System.out.println("    cr:  Combine the result files from multiple runs into one file.");
  System.out.println("        The <input file> argument should be the path to the result files as a glob pattern. The pattern ");
  System.out.println("        supports the typical glob format, and in order to match more than one file must necessarily include");
  System.out.println("        wildcard characters such as ? or *. NOTE: the input file pattern should be enclosed in quotation");
  System.out.println("        marks to avoid the shell or Java expanding it automatically.");
  System.out.println("    ef:  Combine the final line from multiple result files into one file. There will be one line for each");
  System.out.println("        result file in the output file.");
  System.out.println("        The <input file> argument should be the path to the result files as a glob pattern. The pattern ");
  System.out.println("        supports the typical glob format, and in order to match more than one file must necessarily include");
  System.out.println("        wildcard characters such as ? or *. NOTE: the input file pattern should be enclosed in quotation");
  System.out.println("        marks to avoid the shell or Java expanding it automatically.");
  System.exit(0);
}

public static void fn_A(int a,int[] b,float[] c,int d){
  int e, f, g, h, i, j;
  float k, l, m, n;
  int o, p, q;
  h=1;
  for (g=a >> 2; g > 8; g>>=2) {
    h<<=1;
  }
  i=a >> 1;
  j=4 * h;
  if (g == 8) {
    for (int r=0; r < h; r++) {
      o=4 * r;
      for (int s=0; s < r; s++) {
        e=4 * s + 2 * b[h + r];
        f=o + 2 * b[h + s];
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e+=j;
        f+=2 * j;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e+=j;
        f-=j;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e+=j;
        f+=2 * j;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e+=i;
        f+=2;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e-=j;
        f-=2 * j;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e-=j;
        f+=j;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e-=j;
        f-=2 * j;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e+=2;
        f+=i;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e+=j;
        f+=2 * j;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e+=j;
        f-=j;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e+=j;
        f+=2 * j;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e-=i;
        f-=2;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e-=j;
        f-=2 * j;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e-=j;
        f+=j;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e-=j;
        f-=2 * j;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
      }
      f=o + 2 * b[h + r];
      e=f + 2;
      f+=i;
      p=d + e;
      q=d + f;
      k=c[p];
      l=c[p + 1];
      m=c[q];
      n=c[q + 1];
      c[p]=m;
      c[p + 1]=n;
      c[q]=k;
      c[q + 1]=l;
      e+=j;
      f+=2 * j;
      p=d + e;
      q=d + f;
      k=c[p];
      l=c[p + 1];
      m=c[q];
      n=c[q + 1];
      c[p]=m;
      c[p + 1]=n;
      c[q]=k;
      c[q + 1]=l;
      e+=j;
      f-=j;
      p=d + e;
      q=d + f;
      k=c[p];
      l=c[p + 1];
      m=c[q];
      n=c[q + 1];
      c[p]=m;
      c[p + 1]=n;
      c[q]=k;
      c[q + 1]=l;
      e-=2;
      f-=i;
      p=d + e;
      q=d + f;
      k=c[p];
      l=c[p + 1];
      m=c[q];
      n=c[q + 1];
      c[p]=m;
      c[p + 1]=n;
      c[q]=k;
      c[q + 1]=l;
      e+=i + 2;
      f+=i + 2;
      p=d + e;
      q=d + f;
      k=c[p];
      l=c[p + 1];
      m=c[q];
      n=c[q + 1];
      c[p]=m;
      c[p + 1]=n;
      c[q]=k;
      c[q + 1]=l;
      e-=i - j;
      f+=2 * j - 2;
      p=d + e;
      q=d + f;
      k=c[p];
      l=c[p + 1];
      m=c[q];
      n=c[q + 1];
      c[p]=m;
      c[p + 1]=n;
      c[q]=k;
      c[q + 1]=l;
    }
  }
 else {
    for (int r=0; r < h; r++) {
      o=4 * r;
      for (int s=0; s < r; s++) {
        e=4 * s + b[h + r];
        f=o + b[h + s];
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e+=j;
        f+=j;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e+=i;
        f+=2;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e-=j;
        f-=j;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e+=2;
        f+=i;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e+=j;
        f+=j;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e-=i;
        f-=2;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
        e-=j;
        f-=j;
        p=d + e;
        q=d + f;
        k=c[p];
        l=c[p + 1];
        m=c[q];
        n=c[q + 1];
        c[p]=m;
        c[p + 1]=n;
        c[q]=k;
        c[q + 1]=l;
      }
      f=o + b[h + r];
      e=f + 2;
      f+=i;
      p=d + e;
      q=d + f;
      k=c[p];
      l=c[p + 1];
      m=c[q];
      n=c[q + 1];
      c[p]=m;
      c[p + 1]=n;
      c[q]=k;
      c[q + 1]=l;
      e+=j;
      f+=j;
      p=d + e;
      q=d + f;
      k=c[p];
      l=c[p + 1];
      m=c[q];
      n=c[q + 1];
      c[p]=m;
      c[p + 1]=n;
      c[q]=k;
      c[q + 1]=l;
    }
  }
}

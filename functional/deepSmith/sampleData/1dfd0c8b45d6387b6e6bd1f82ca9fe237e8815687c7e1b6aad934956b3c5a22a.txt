private static void fn_A(){
  System.out.println("Windows Portable Executable");
  System.out.println();
  System.out.println("byte[128] msdosStub;");
  System.out.println("int32le peSignature; // 0x4550");
  System.out.println("int16le machine;");
  System.out.println("int16le sectionCount;");
  System.out.println("int32le creationDate; // epoch: January 1, 1970");
  System.out.println("int32le symbolTablePtr;");
  System.out.println("int32le symbolCount;");
  System.out.println("int16le optionalHeaderSize; // usually 0xE0");
  System.out.println("int16le characteristics;");
  System.out.println("int16le magic; // usually 0x010B");
  System.out.println("int16le linkerVersion;");
  System.out.println("int32le codeSize;");
  System.out.println("int32le dataSize;");
  System.out.println("int32le bssSize;");
  System.out.println("int32le entryPointOffset;");
  System.out.println("int32le codeOffset;");
  System.out.println("int32le dataOffset;");
  System.out.println("int32le loadAddress;");
  System.out.println("int32le sectionAlignment;");
  System.out.println("int32le fileAlignment;");
  System.out.println("int32le osVersion; // usually 0x40000 (Win32)");
  System.out.println("int32le binaryVersion;");
  System.out.println("int32le subsystemVersion; // usually 0x40000 (Win32)");
  System.out.println("int32le win32Version; // usually 0");
  System.out.println("int32le imageSize;");
  System.out.println("int32le headerSize;");
  System.out.println("int32le checksum;");
  System.out.println("int16le subsystem;");
  System.out.println("int16le dllCharacteristics;");
  System.out.println("int32le stackReserveSize;");
  System.out.println("int32le stackCommitSize;");
  System.out.println("int32le heapReserveSize;");
  System.out.println("int32le heapCommitSize;");
  System.out.println("int32le loaderFlags;");
  System.out.println("int32le directoryEntryCount;");
  System.out.println("directoryEntry[] directoryEntries;");
  System.out.println("\tint32le virtualAddress;");
  System.out.println("\tint32le size;");
  System.out.println("sectionHeader[] sectionHeaders;");
  System.out.println("\tbyte[8] name;");
  System.out.println("\tint32le virtualSize;");
  System.out.println("\tint32le virtualAddress;");
  System.out.println("\tint32le dataSize;");
  System.out.println("\tint32le dataOffset;");
  System.out.println("\tint32le relocationsOffset;");
  System.out.println("\tint32le lineNumbersOffset;");
  System.out.println("\tint16le relocationCount;");
  System.out.println("\tint16le lineNumberCount;");
  System.out.println("\tint32le characteristics;");
}

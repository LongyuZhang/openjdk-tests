public static final boolean fn_A(String a){
  if (a.equals("in") || a.equals("in1")) {
  }
 else   if (a.equals("in2")) {
  }
 else   if (a.equals("append") || a.equals("app")) {
  }
 else   if (a.equals("overwrite") || a.equals("ow")) {
  }
 else   if (a.equals("initialsize")) {
  }
 else   if (a.equals("showstats") || a.equals("stats")) {
  }
 else   if (a.equals("ways")) {
  }
 else   if (a.equals("buflen") || a.equals("bufflen") || a.equals("bufferlength")) {
  }
 else   if (a.equals("k")) {
  }
 else   if (a.equals("threads") || a.equals("t")) {
  }
 else   if (a.equals("showspeed") || a.equals("ss")) {
  }
 else   if (a.equals("ecco")) {
  }
 else   if (a.equals("merge")) {
  }
 else   if (a.equals("verbose")) {
  }
 else   if (a.equals("verbose2")) {
  }
 else   if (a.equals("minprob")) {
  }
 else   if (a.equals("reads") || a.startsWith("maxreads")) {
  }
 else   if (a.equals("prealloc") || a.equals("preallocate")) {
  }
 else   if (a.equals("prefilter")) {
  }
 else   if (a.equals("prefiltersize") || a.equals("prefilterfraction") || a.equals("pff")) {
  }
 else   if (a.equals("minprobprefilter") || a.equals("mpp")) {
  }
 else   if (a.equals("minprobmain") || a.equals("mpm")) {
  }
 else   if (a.equals("prefilterpasses") || a.equals("prepasses")) {
  }
 else   if (a.equals("prehashes") || a.equals("hashes")) {
  }
 else   if (a.equals("onepass")) {
  }
 else   if (a.equals("passes")) {
  }
 else   if (a.equals("rcomp")) {
  }
 else {
    return false;
  }
  return true;
}
